version: "3.5"

volumes:
  postgres_data:
  static_volume:

networks:
  real_estate_docker_network:
    name: real_estate_docker_network
    driver: bridge

services:

  backend:
    container_name: django_backend_real_estate
    env_file:
      # see .env_example
      - .env
    build:
      context: .
      dockerfile: build/Dockerfile.django_backend
    restart: unless-stopped
    command: >
      sh -c "python manage.py wait_for_db &&
      python manage.py migrate --noinput &&
      python manage.py collectstatic --no-input &&
      gunicorn real_estate.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/code/staticfiles
    depends_on:
      - database
    networks:
      - real_estate_docker_network

  frontend:
    container_name: vue_frontend_real_estate
    build:
      context: .
      dockerfile: build/Dockerfile.vue_frontend
    restart: unless-stopped
    networks:
      - real_estate_docker_network

  nginx:
    container_name: nginx_proxy_server_real_estate
    build:
      context: .
      dockerfile: build/Dockerfile.nginx_proxy
    restart: unless-stopped
    ports:
      - 80:80
    volumes:
      - static_volume:/code/staticfiles
    depends_on:
      - frontend
      - backend
    networks:
      - real_estate_docker_network
    
  database:
    container_name: postgres_db_real_estate
    build:
      context: .
      dockerfile: build/Dockerfile.postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    # from .env
    environment:
      - POSTGRES_HOST=${DATABASE_HOST}
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_DB=${DATABASE_NAME}
    networks:
      - real_estate_docker_network
